name: Build and Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            binary_name: ollama-meter.exe
            archive_name: ollama-meter-windows-x64.zip
          - target: x86_64-apple-darwin
            os: macos-latest
            binary_name: ollama-meter
            archive_name: ollama-meter-macos-x64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            binary_name: ollama-meter
            archive_name: ollama-meter-macos-arm64.tar.gz
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            binary_name: ollama-meter
            archive_name: ollama-meter-linux-x64.tar.gz

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../${{ matrix.archive_name }} ${{ matrix.binary_name }}

    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../${{ matrix.archive_name }} ${{ matrix.binary_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.archive_name }}
        path: ${{ matrix.archive_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_number }}
        name: Build ${{ github.run_number }}
        draft: false
        prerelease: true
        files: ./artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}